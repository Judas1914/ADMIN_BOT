from settings import *
from .buttons import *
from .correct_mail import *
from .States import *
from models.users import User

# Jpg
file_list1 = ['data/1.jpg', 'data/2.jpg', 'data/3.jpg',
              'data/4.jpg', 'data/5.jpg', 'data/6.jpg',
              'data/7.jpg', 'data/8.jpg', 'data/9.jpg']

res_data1 = []
for file in file_list1:
    with open(file, 'rb') as fl:
        res_data1.append(fl.read())

file_list2 = ['data/10.jpg', 'data/11.jpg', 'data/12.jpg',
              'data/13.jpg', 'data/14.jpg', 'data/15.mp4',
              'data/16.jpg', 'data/17.jpg', 'data/18.jpg',
              'data/19.jpg', 'data/20.jpg', 'data/21.jpg',
              'data/22.jpg', 'data/23.jpg', 'data/24.jpg']

res_data2 = []
for file in file_list2:
    with open(file, 'rb') as fl:
        res_data2.append(fl.read())


@dp.message_handler(commands='start')
async def start(message: types.Message):
    if str(message.chat.id) != config['Chat']['chat_id']:
        id = str(message.chat.id)
        message.bot.user_data[id] = User(id, message.chat.username, message.chat.first_name) # –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏

        await bot.send_photo(
            message.chat.id, res_data1[0],
            "üá∑üá∫Ô∏è –£–≤–∞–∂–∞–µ–º—ã–π {0.first_name} ‚ùó\n"
            "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–π—Ç–µ –∏ –¥–µ–ª–∞–π—Ç–µ —á—Ç–æ –≤–∞–º –ø–∏—à—É—Ç, –∏ –ø—Ä–æ–±–ª–µ–º –Ω–µ –±—É–¥–µ—Ç.\n"
            "–ù–∞–∂–º–∏ –ù–ê–ß–ê–¢–¨  –Ω–∞ –∫–Ω–æ–ø–∫–µ —Å–Ω–∏–∑—ÉüëáÔ∏è–∏ –º—ã –Ω–∞—á–Ω–µ–º\n"
            "--------------------------------------\n"
            "üá¨üáßÔ∏è Dear {0.first_name} ‚ùó\n"
            "Read carefully and do what they write to you, and there will be no "
            "problems.\n"
            "Click the START button on the bottom üëáÔ∏è and we will begin\n"
            .format(message.from_user), reply_markup=keyboard1)

    elif str(message.chat.id) == config['Chat']['chat_id']:
        chat_id = config['Chat']['chat_id']
        await bot.send_photo(
            chat_id, res_data2[9],
            "{0.first_name},–Ω–µ –Ω—É–∂–Ω–æ –∑–¥–µ—Å—å –ø–∏—Å–∞—Ç—å, –∑–¥–µ—Å—å –≤—Å—ë —É–∂–µ –ø—Ä–æ–¥—É–º–∞–ª–∏ –∑–∞ –≤–∞—Å.\n\n"
            "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∏—Ç–∞—Ç—å –∏ –¥–µ–ª–∞—Ç—å –∫–∞–∫ –Ω–∞–ø–∏—Å–∞–Ω–æ‚ùóÔ∏è"
            "-----------------------------------------------------------\n"
            "{0.first_name}, no need to write here, everything has already been thought out for you.\n\n"
            "It is enough to read and do as it is written‚ùóÔ∏è".format(message.from_user))

        await bot.delete_message(chat_id, message.message_id)
        await asyncio.sleep(5)
        await bot.delete_message(chat_id, message.message_id + 1)


@dp.callback_query_handler(lambda call: call.data == 'st.start')
async def mail_entry(call: types.CallbackQuery):

    await call.message.answer_photo(
        res_data1[1],
        "üá∑üá∫Ô∏è –ù–∞–ø–∏—à–∏—Ç–µ –ü–û–ß–¢–£ —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã –ø–æ–∫—É–ø–∞–ª–∏\n"
        "(–∫–æ—Ç–æ—Ä—É—é –≤—ã –≤–≤–æ–¥–∏–ª–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ)üëáÔ∏è\n"
        "-----------------------------\n"
        "üá¨üáßÔ∏è Write the MAIL with which you bought\n"
        "(which you entered when purchasing)üëáÔ∏è")

    await Form.mail.set()

    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)


@dp.message_handler(state=Form.mail)
async def mail_handler(message: types.Message, state: FSMContext):
    email = message.text

    if is_valid_email(email):
        id = str(message.chat.id)
        message.bot.user_data[id].mail = email

        async with state.proxy() as data:
            data['mail'] = message.text

        await bot.send_photo(
            message.chat.id, res_data1[2],
            "üá∑üá∫Ô∏è–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ò–ì–†–´ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–æ–±—Ä–µ–ª–∏üëá\n"
            "Ô∏è---------------------------------\n"
            "üá¨üáßÔ∏èWrite the name of the GAME you purchasedüëáÔ∏è")
        await Form.next()
    else:
        await bot.send_message(message.chat.id,
                         "–í–∞—Å —Ä–∞–∑–≤–µ —ç—Ç–æ –ø–æ–ø—Ä–æ—Å–∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å‚ÅâÔ∏è")

        await bot.delete_message(message.chat.id, message.message_id)
        await asyncio.sleep(5)
        await bot.delete_message(message.chat.id, message.message_id + 1)


@dp.message_handler(state=Form.game)
async def game_handler(message: types.Message, state: FSMContext):
    game = message.text

    id = str(message.chat.id)
    message.bot.user_data[id].game_name = game

    await bot.send_photo(message.chat.id, res_data1[3],
                    "üá∑üá∫Ô∏è–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–æ—â–∞–¥–∫—É –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–ª–∏ –ò–ì–†–£üëáÔ∏è\n"
                    "---------------------------------\n"
                    "üá¨üáßÔ∏èSelect the site where you purchased the GAMEüëáÔ∏è\n", reply_markup=sell)
    await state.finish()


@dp.callback_query_handler(text_contains='mr.')
async def Shops(call: types.CallbackQuery):

    id = str(call.message.chat.id)
    call.bot.user_data[id].market_name = str(call.data) # user market

    json_data = check_n_load_json(BASE_JSON_FILEPATH)

    # C–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ JSON
    with open(BASE_JSON_FILEPATH, "w", encoding='utf-8') as file:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        json_data.update(call.bot.user_data[id].to_dict())
        # –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–¥
        json.dump(json_data, file, indent=4, ensure_ascii=False)

        await bot.send_message(config['meid']['id'], call.bot.user_data[id].to_str())


    await bot.send_photo(call.message.chat.id, res_data1[4],
                   "üá∑üá∫Ô∏è –ü–µ—Ä–µ–¥–∞—á–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º —Å—Ç—Ä–æ–≥–æ –ó–ê–ü–†–ï–©–ï–ù–ê, \n"
                   "–≤–ª–µ—á–µ—Ç –∑–∞ —Å–æ–±–æ–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –ø–æ–∫—É–ø–∫–∏ –∏ –¥–æ—Å—Ç—É–ø –≤ –∞–∫–∫–∞—É–Ω—Ç\n"
                   "-------------------------------------------------------------\n"
                   "üá¨üáßÔ∏è Transferring an account to third parties is strictly FORBIDDEN, "
                   "entails a restriction on further purchases and access to the account"
                   .format(call.message.from_user), reply_markup=ok)

    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)


@dp.callback_query_handler(text_contains='k.')
async def okey(call):
    username = call.message.chat.first_name
    if call.data == "k.ok":
        await bot.send_photo(call.message.chat.id, res_data1[5],
                       "üá∑üá∫–ï—Å–ª–∏ –≤—ã –∫—É–ø–∏–ª–∏ —Å –¥—Ä—É–≥–æ–º –∏ –≤–∞–º –ø–æ–ø–∞–ª—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π, –Ω–µ \n"
                       "–ø–∞–Ω–∏–∫—É–π—Ç–µ, –Ω–∞–ø–∏—à–µ—Ç–µ –ê–î–ú–ò–ù–£ –∏ –≤–∞–º –¥–∞–¥—É—Ç –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç üë≠Ô∏è\n"
                       "------------------------------------------------\n"
                       "üá¨üáßÔ∏èIf you bought with a friend and you got the same one, don't \n"
                       "panic, write to ADMIN and you will be given another account üë≠Ô∏è"
                       .format(call.message.from_user), reply_markup=ok1)


    elif call.data == "k.ok1":
        await bot.send_photo(call.message.chat.id, res_data1[6],
                       username + " –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚ÅâÔ∏è\n\n"
                        + username + " In which language to continue‚ÅâÔ∏è"
                       .format(call.message.from_user), reply_markup=lang)

    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)


@dp.callback_query_handler(text_contains='l.')
async def okey(call):
    if call.data == "l.ru":
        await bot.send_photo(call.message.chat.id, res_data1[7],
                       "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ –∏–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–ø—Ä–æ—Å, —Ç–æ –Ω–µ"
                       "–Ω—É–∂–Ω–æ —Å—É–µ—Ç–∏—Ç—å—Å—è –∏ –∫–∏–¥–∞—Ç—å—Å—è –≤ –ø–∞–Ω–∏–∫—É, —Ç–∞–º –≤ –ß–ê–¢-–ë–û–¢–ï, –∫—É–¥–∞ –±—É–¥—É—Ç"
                       "–ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫–æ–¥—ã –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ " + " –ü–û–ú–û–©–¨ " + ", –≤—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
                       "–Ω–∞–π–¥–µ—Ç–µ —Å–≤–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–≤—è–∂–µ—Ç–µ—Å—å —Å –ê–î–ú–ò–ù–û–ú, –∏"
                       "–≤–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç—è—Ç –∏ –ø–æ–º–æ–≥—É—Ç, –∏–ª–∏ –∑–∞–º–µ–Ω—è—Ç, –∏–ª–∏ –¥–∞–¥—É—Ç –¥—Ä—É–≥–æ–π.\n\n"
                       "–ò –Ω–µ –Ω–∞—á–∏–Ω–∞–π—Ç–µ —Å –Ω–µ–≥–∞—Ç–∏–≤–∞üòâÔ∏è\n"
                       .format(call.message.from_user), reply_markup=okk2)

    elif call.data == "l.en":
        await bot.send_photo(call.message.chat.id, res_data1[7],
                       "If you have a problem or a question, then there is no need to fuss"
                       "and panic, there in the CHAT-BOT where the codes will come there"
                       "will be a " + " HELP " + " button, you will definitely find your answer to the"
                       "question or contact the ADMIN, and they will definitely answer you"
                       "and help, or replace, or give another.\n\n"
                       "And don't start with the negativeüòâÔ∏è\n"
                       .format(call.message.from_user), reply_markup=okk3)

    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)


@dp.callback_query_handler(text_contains='ko.')
async def okkey(call):
    username = call.message.chat.first_name
    if call.data == "ko.ok3":
        await bot.send_photo(call.message.chat.id, res_data1[8],
                       "Thank you very much " + username + " for doing everything rightüëçÔ∏è‚ùóÔ∏è\n\n"
                       "Press the " + "GO" + " buttonüëáÔ∏è you will be taken to the BOTA where "
                       "only CODES come, you do not need to enter anything there, you "
                       "enter the login and password in STEAM itself, as above in the "
                       "picture, and the CODE will come to the BOTA. After the transition,"
                       "click RUN (at the bottom of the screen).\n\n"
                       "And do not forget about the " + "HELP" + " button,"
                       " press it when you need it and they will help you. Good luck‚ùóÔ∏èÔ∏è\n"
                       .format(call.message.from_user), reply_markup=go)

    elif call.data == "ko.ok2":
        await bot.send_photo(call.message.chat.id, res_data1[8],
                       "–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ  " + username + " , —á—Ç–æ –≤—Å–µ —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æüëçÔ∏è‚ùóÔ∏è\n\n"
                       "–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É" + " –ü–ï–†–ï–ô–¢–ò" + "üëáÔ∏è –≤—ã –ø–æ–ø–∞–¥–µ—Ç–µ –≤ –ë–û–¢–ê –∫—É–¥–∞"
                       "–ø—Ä–∏—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ –ö–û–î–´, –≤–≤–æ–¥–∏—Ç—å —Ç—É–¥–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, –ª–æ–≥–∏–Ω –∏ "
                       "–ø–∞—Ä–æ–ª—å –≤—ã –≤–≤–æ–¥–∏—Ç–µ –≤ —Å–∞–º STEAM, –∫–∞–∫ –≤—ã—à–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ, –∞ –≤ "
                       "–ë–û–¢–ê –ø—Ä–∏–¥–µ—Ç –ö–û–î. –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –ó–ê–ü–£–°–¢–ò–¢–¨\n (–≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞)\n\n"
                       "–ò –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ –∫–Ω–æ–ø–∫—É" + "–ü–û–ú–û–©–¨" + ", –Ω–∞–∂–º—ë—Ç–µ –µ—ë –∫–æ–≥–¥–∞ –≤–∞–º –æ–Ω–∞"
                       "–ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∏ –≤–∞–º –ø–æ–º–æ–≥—É—Ç. –£–¥–∞—á–∏‚ùóÔ∏è\n"
                       .format(call.message.from_user), reply_markup=go)

    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)

    await bot.send_message(call.message.chat.id, "üëá–ú–µ–Ω—é", reply_markup = Help_Steam_Guard)

@dp.message_handler(content_types='text')
async def start(message: types.Message):
    if message.text.lower() == '–º–µ–Ω—é' and str(message.chat.id) != config['Chat']['chat_id']:
        await bot.send_photo(
            message.chat.id, res_data2[0],
            "–°–µ–π—á–∞—Å –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã‚ùóÔ∏è\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –ö–ù–û–ü–ö–£üëáÔ∏è"
            .format(message.from_user), reply_markup=Help)
        await bot.delete_message(message.chat.id, message.message_id)

    elif str(message.chat.id) == config['Chat']['chat_id']:
        chat_id = config['Chat']['chat_id']
        await bot.send_photo(
            chat_id, res_data2[9],
            "{0.first_name},–Ω–µ –Ω—É–∂–Ω–æ –∑–¥–µ—Å—å –ø–∏—Å–∞—Ç—å, –∑–¥–µ—Å—å –≤—Å—ë —É–∂–µ –ø—Ä–æ–¥—É–º–∞–ª–∏ –∑–∞ –≤–∞—Å.\n\n"
            "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∏—Ç–∞—Ç—å –∏ –¥–µ–ª–∞—Ç—å –∫–∞–∫ –Ω–∞–ø–∏—Å–∞–Ω–æ‚ùóÔ∏è"
            "-----------------------------------------------------------\n"
            "{0.first_name}, no need to write here, everything has already been thought out for you.\n\n"
            "It is enough to read and do as it is written‚ùóÔ∏è".format(message.from_user))

        await bot.delete_message(chat_id, message.message_id)
        await asyncio.sleep(3)
        await bot.delete_message(chat_id, message.message_id + 1)

        await bot.restrict_chat_member(message.chat.id, message.from_id, types.ChatPermissions(False), until_date = 10)

    elif message.text == "/all_inf":
        if str(message.chat.id) == str(config['meid']['id']):
            with open("settings/user_data.json", "rb") as file:
                await bot.send_document(config['meid']['id'], document=file)

        else:
            await bot.send_message(
                message.chat.id,
                "–í–∞—Å —Ä–∞–∑–≤–µ —ç—Ç–æ –ø–æ–ø—Ä–æ—Å–∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å‚ÅâÔ∏è")

            await bot.delete_message(message.chat.id, message.message_id)
            await asyncio.sleep(5)
            await bot.delete_message(message.chat.id, message.message_id + 1)

    else:
        await bot.send_message(
            message.chat.id,
            "–í–∞—Å —Ä–∞–∑–≤–µ —ç—Ç–æ –ø–æ–ø—Ä–æ—Å–∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å‚ÅâÔ∏è")

        await bot.delete_message(message.chat.id, message.message_id)
        await asyncio.sleep(5)
        await bot.delete_message(message.chat.id, message.message_id + 1)